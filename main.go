package main

import (
	"log"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	botToken := os.Getenv("TELEGRAM_BOT_TOKEN")
	if botToken == "" {
		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
	}

	// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
	bot, err := tgbotapi.NewBotAPI(botToken)
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞:", err)
	}

	bot.Debug = false
	log.Printf("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: %s", bot.Self.UserName)

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
	for update := range updates {
		if update.Message != nil {
			handleMessage(bot, update.Message)
		} else if update.CallbackQuery != nil {
			handleCallbackQuery(bot, update.CallbackQuery)
		}
	}
}

// handleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
func handleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {
	chatID := message.Chat.ID
	text := message.Text

	switch text {
	case "/start":
		handleStart(bot, chatID)
	case "/help":
		handleHelp(bot, chatID)
	case "/login":
		handleLogin(bot, chatID)
	case "/diary":
		handleDiary(bot, chatID)
	case "/periods":
		handlePeriods(bot, chatID)
	default:
		handleDefault(bot, chatID, text)
	}
}

// handleStart –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func handleStart(bot *tgbotapi.BotAPI, chatID int64) {
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìö –î–Ω–µ–≤–Ω–∏–∫", "diary"),
			tgbotapi.NewInlineKeyboardButtonData("üìÖ –ü–µ—Ä–∏–æ–¥—ã", "periods"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîê –í–æ–π—Ç–∏", "login"),
			tgbotapi.NewInlineKeyboardButtonData("‚ÑπÔ∏è –ü–æ–º–æ—â—å", "help"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—å–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

// handleHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
func handleHelp(bot *tgbotapi.BotAPI, chatID int64) {
	helpText := `ü§ñ *–®–∫–æ–ª—å–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫*

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/login - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ
/diary - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞
/periods - –£—á–µ–±–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /login
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
3. –í—ã–±–∏—Ä–∞–π—Ç–µ –Ω–µ–¥–µ–ª–∏ –∏ –ø–µ—Ä–∏–æ–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–æ–∫`

	msg := tgbotapi.NewMessage(chatID, helpText)
	msg.ParseMode = "Markdown"
	bot.Send(msg)
}

// handleLogin –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
func handleLogin(bot *tgbotapi.BotAPI, chatID int64) {
	msg := tgbotapi.NewMessage(chatID, "üîê –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n`–ª–æ–≥–∏–Ω –ø–∞—Ä–æ–ª—å`\n\n–ü—Ä–∏–º–µ—Ä: `Daniil_Melnik mypassword`")
	msg.ParseMode = "Markdown"
	bot.Send(msg)
}

// handleDiary –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞
func handleDiary(bot *tgbotapi.BotAPI, chatID int64) {
	// TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	// TODO: –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏
	msg := tgbotapi.NewMessage(chatID, "üìö –î–Ω–µ–≤–Ω–∏–∫\n\n‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ /login")
	bot.Send(msg)
}

// handlePeriods –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä–∏–æ–¥–æ–≤
func handlePeriods(bot *tgbotapi.BotAPI, chatID int64) {
	// TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	// TODO: –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–∏–æ–¥—ã –æ–±—É—á–µ–Ω–∏—è
	msg := tgbotapi.NewMessage(chatID, "üìÖ –£—á–µ–±–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã\n\n‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ /login")
	bot.Send(msg)
}

// handleDefault –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
func handleDefault(bot *tgbotapi.BotAPI, chatID int64, text string) {
	// TODO: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	msg := tgbotapi.NewMessage(chatID, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.")
	bot.Send(msg)
}

// handleCallbackQuery –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏
func handleCallbackQuery(bot *tgbotapi.BotAPI, query *tgbotapi.CallbackQuery) {
	chatID := query.Message.Chat.ID
	data := query.Data

	// –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
	callback := tgbotapi.NewCallback(query.ID, "")
	bot.Request(callback)

	switch data {
	case "diary":
		handleDiary(bot, chatID)
	case "periods":
		handlePeriods(bot, chatID)
	case "login":
		handleLogin(bot, chatID)
	case "help":
		handleHelp(bot, chatID)
	default:
		// TODO: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–µ–¥–µ–ª—å –∏ –ø–µ—Ä–∏–æ–¥–æ–≤
		msg := tgbotapi.NewMessage(chatID, "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å...")
		bot.Send(msg)
	}
}